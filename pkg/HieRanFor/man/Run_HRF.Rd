% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/Run_HRF.R
\name{Run_HRF}
\alias{Run_HRF}
\title{Runs the hierarchical randomForest on the training data.}
\usage{
Run_HRF(Train_Data, Case_ID, Hie_Levels, Internal_End_Path = FALSE,
  End_Path_Name = "End_Path", Root_Include = FALSE,
  Root_Name = "TREE_ROOT", Exp_Var = NA, mtry = if (!is.integer(mtry))
  mtry = "tuneRF", ntree = 500, importance = TRUE, proximity = TRUE,
  keep.forest = TRUE, keep.inbag = TRUE, ...)
}
\arguments{
\item{Train_Data}{Data frame with the training data.}

\item{Case_ID}{A character or integer, specifying the name or
column number used as case IDs in \code{Train_Data}. Case ID values
must be unique.}

\item{Hie_Levels}{A vector of characters or integers, containing the
names or column numbers of the hierarchical levels in \code{Train_Data}. Order  of
columns in \code{Train_Data} should be from the tree root to the terminal nodes.}

\item{Internal_End_Path}{Logical, \code{TRUE} if all terminal nodes are in the
lowest level of the class hierarchy.}

\item{End_Path_Name}{Character - the name used in level i+1 for terminal
nodes ending in level i. The only factor in the class hierarchy that can
apear in more than one hierarchy level}

\item{Root_Include}{Logical, \code{TRUE} if \code{ROOT_NAME} is included in
\code{Hie_Levels}.}

\item{Root_Name}{Character - name to use for the tree root.}

\item{Exp_Var}{A vector of characters or integers, containing the
 names or column numbers in \code{Train_Data} with the explanatory variables.
 Default takes all columns other than \code{Case_ID} and
\code{Hie_Levels}.}

\item{mtry}{Number of variables randomly sampled as candidates
at each split. Note that the default is to use \code{tuneRF} function of
\code{randomForest} package for each local classifier. Setting \code{mtry="tuneRF_2"} will use a
sligtly different version of \code{tuneRF}.}

\item{ntree}{Number of trees to grow in each local classifier.
See \code{?randomForest} for additional details.}

\item{importance}{Logical, if \code{TRUE} importance of variables will be
assesed and saved at each local classifer. See \code{?randomForest} for additional
details.}

\item{proximity}{Logical, if \code{TRUE}, proximity will be calcualted for
each local classifier. See \code{?randomForest} for additional details.}

\item{keep.forest}{Logical, if \code{TRUE} (recommended) the forest of each
local classifer will be retained. If \code{FALSE}, the predict and performance functions will return an error.}

\item{keep.inbag}{Logical, if \code{TRUE} an \emph{n} by \code{ntree} matrix be returned
that keeps track of which cases are "in-bag” in which trees. \emph{n} being the
number of cases in the training set of a local classifer. Required for the
permutation-based performance assesments.}

\item{...}{Optional parameters to be passed to the low level
  functions.}
}
\value{
An object of class \code{"Hier.Random.Forest"} that constains the following:
  \item{Hier_Struc}{A list containing three data frames:
  \describe{
  \item{\code{$LRF_Info} - information on each local randomForest, containing the following columns:}{}
     {\tabular{lll}{
      \code{"Classifer_ID"} \tab \tab The name of the local classifer. \cr
      \code{"Par_Level"}    \tab \tab The name of the parent node in the local classifer. \cr
      \code{"Par_Name"}     \tab \tab The name of the parent node in the local classifer. \cr
      \code{"Par_Clas_ID"}  \tab \tab The name of the classifer in which the parent node was classfied.  \cr
      \code{"Num_Sib_Tot"}  \tab \tab The number of sibling nodes in the local classifer.  \cr
      \code{"Num_Sib_Ter"}  \tab \tab The number of terminal sibling nodes in the local classifer.  \cr
      \code{"Num_Sib_Int"}  \tab \tab The number of internal sibling nodes in the local classifer.  \cr
       }}
  \item{\code{$Nodes_Info} - information on each internal or terminal node in the class hierarchy, containing the following columns:}{}
      {\tabular{lll}{
      \code{"Node_NamD"}        \tab \tab The name of the node. \cr
      \code{"Node_Level"}       \tab \tab  The level of the node in the class hierarchy. \cr
      \code{"Node_Freq"}        \tab \tab  The number of times the node appears in the training data. \cr
      \code{"Node_Par_Lev"}     \tab \tab  The level in which the parent of the node resides. \cr
      \code{"Node_Par_Name"}    \tab \tab The name of the node's parent node. \cr
      \code{"Term_Int_node"}    \tab \tab If the node is terminal or internal. \cr
      \code{"Clas_yes_no"}      \tab \tab If the node is the parent node in a local classifer. \cr
      \code{"Classifier_ID"}    \tab \tab If the node is the parent node in a local classifer, the name of the local classifer. \cr
      \code{"Classified_In"}    \tab \tab The name of the local classifer in which the node is classified. \cr
      \code{"Lev_Above_Clas_In"}\tab \tab The number of levels above the node's level in which it is  classified. \cr
       }}
  \item{\code{$Unique_Path} - information on all the unique pathes from the tree root to each of the terminal nodes.
  Include two additional columns for \code{Root_Name} and \code{End_Path_Name}.}{}}}

  \item{Train_Data_Ready}{Data frame containing the  training data after
  restructuring to the usable format of \code{Run_HRF}}
  \item{Case_ID_2}{Column
  number in \code{Train_Data_Ready} containing the case IDs}
  \item{Path_Name_2}{Column number in Train_Data_Ready containing the path
  names}
  \item{Hie_Levels_2}{Column number in \code{Train_Data_Ready} containing the
  hierarchical information}
  \item{Exp_Var_2}{Column number in \code{Train_Data_Ready} containing the explanatory variables.}
  \item{All_Local_RF}{The main large list with all the information on
  each local classifer. For each local classifer, the function returns a list
  consisting of three objects:
  \tabular{lll}{
  \code{Local_LRF_Info}\tab \tab The information on the local randomForest as found in the \code{$Hier_Struc$LRF_Info} data frame. \cr
  \code{Local_Data}    \tab \tab The Case ID's of all cases that were used as training data for the local randomForest. \cr
  \code{Local_RF}      \tab \tab an object of class ranomForest for the local classifier. See package randomForest for details. \cr
  }}
  \item{Order_Local_RF}{data frame containing the order in which local randomForests are stored in the \code{All_Local_RF} list.}
  \item{call}{the call to function \code{Run_HRF}.}
}
\description{
Tha main function of the package that identifies the hierarchial class
structure from the input training data and runs a randomForest as the local
classifier at each parent node. A local randomForest classifer is added for
each internal node that has more than one child node. Returns an object of
class Hier.Random.Forest that contains all the local randomForest objects
along with additional information on the hierachical structure.
}
\details{
Implements Breiman's (2001) random forest algorithm based on the \code{\link{randomForest}} package for classification.
}
\author{
Yoni Gavish <gavishyoni@gmail.com>
}
\references{
Breiman, L. 2001. Random forests. \emph{Machine Learning} 45:5–32.
}
\seealso{
\code{\link{Extract_Votes}} for extracting the proportion of votes,
  \code{\link{HRF_Importance}} for variable importance,
  \code{\link{Run_HRF_As_Flat}} for running a flat classification,
  \code{\link{Plot_Hie_Tree}} for plotting the class structure,
  \code{\link{HRF_Performance}} for assising accuracy,
}

